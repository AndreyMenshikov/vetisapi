
package ru.vetrf.api.schema.cdm.registry.ikar.service.v2;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "IkarServiceBindingQSService", targetNamespace = "http://api.vetrf.ru/schema/cdm/registry/ikar/service/v2", wsdlLocation = "http://api.vetrf.ru/schema/platform/services/2.1-RC-last/IkarService_v2.1_production.wsdl")
public class IkarServiceBindingQSService
    extends Service
{

    private final static URL IKARSERVICEBINDINGQSSERVICE_WSDL_LOCATION;
    private final static WebServiceException IKARSERVICEBINDINGQSSERVICE_EXCEPTION;
    private final static QName IKARSERVICEBINDINGQSSERVICE_QNAME = new QName("http://api.vetrf.ru/schema/cdm/registry/ikar/service/v2", "IkarServiceBindingQSService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://api.vetrf.ru/schema/platform/services/2.1-RC-last/IkarService_v2.1_production.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        IKARSERVICEBINDINGQSSERVICE_WSDL_LOCATION = url;
        IKARSERVICEBINDINGQSSERVICE_EXCEPTION = e;
    }

    public IkarServiceBindingQSService() {
        super(__getWsdlLocation(), IKARSERVICEBINDINGQSSERVICE_QNAME);
    }

    public IkarServiceBindingQSService(WebServiceFeature... features) {
        super(__getWsdlLocation(), IKARSERVICEBINDINGQSSERVICE_QNAME, features);
    }

    public IkarServiceBindingQSService(URL wsdlLocation) {
        super(wsdlLocation, IKARSERVICEBINDINGQSSERVICE_QNAME);
    }

    public IkarServiceBindingQSService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, IKARSERVICEBINDINGQSSERVICE_QNAME, features);
    }

    public IkarServiceBindingQSService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IkarServiceBindingQSService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IkarServicePortType
     */
    @WebEndpoint(name = "IkarServiceBindingQSPort")
    public IkarServicePortType getIkarServiceBindingQSPort() {
        return super.getPort(new QName("http://api.vetrf.ru/schema/cdm/registry/ikar/service/v2", "IkarServiceBindingQSPort"), IkarServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IkarServicePortType
     */
    @WebEndpoint(name = "IkarServiceBindingQSPort")
    public IkarServicePortType getIkarServiceBindingQSPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://api.vetrf.ru/schema/cdm/registry/ikar/service/v2", "IkarServiceBindingQSPort"), IkarServicePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (IKARSERVICEBINDINGQSSERVICE_EXCEPTION!= null) {
            throw IKARSERVICEBINDINGQSSERVICE_EXCEPTION;
        }
        return IKARSERVICEBINDINGQSSERVICE_WSDL_LOCATION;
    }

}
